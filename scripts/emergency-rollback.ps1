# üö® SCRIPT DE ROLLBACK D'URGENCE - VERSION POWERSHELL üö®
#
# Restaure la structure originale depuis le snapshot structure-originale.json
#
# ‚ö†Ô∏è  UTILISATION D'URGENCE UNIQUEMENT !
# ‚ö†Ô∏è  CE SCRIPT VA SUPPRIMER TOUS LES CHANGEMENTS !
#
# USAGE:
#   .\scripts\emergency-rollback.ps1 "D:\SAMPLES 3\#RAWSTYLE"
#
# PR√âREQUIS:
#   - Le fichier structure-originale.json doit exister dans .audio-organizer\
#   - Droits d'√©criture sur le dossier cible
#   - Node.js install√©

param(
    [Parameter(Mandatory=$true)]
    [string]$TargetPath
)

Write-Host ""
Write-Host "üö® ================================" -ForegroundColor Red
Write-Host "üö®   SCRIPT DE ROLLBACK D'URGENCE" -ForegroundColor Red
Write-Host "üö® ================================" -ForegroundColor Red
Write-Host ""

Write-Host "‚ö†Ô∏è  ATTENTION: Ce script est DESTRUCTIF !" -ForegroundColor Yellow
Write-Host "‚ö†Ô∏è  Il va SUPPRIMER tous les changements effectu√©s !" -ForegroundColor Yellow
Write-Host "‚ö†Ô∏è  Les fichiers seront recr√©√©s VIDES !" -ForegroundColor Yellow
Write-Host ""
Write-Host "üìÇ Dossier cible: $TargetPath" -ForegroundColor Cyan
Write-Host ""

# V√©rifications pr√©liminaires
if (-not (Test-Path $TargetPath)) {
    Write-Host "‚ùå Erreur: Le dossier cible n'existe pas: $TargetPath" -ForegroundColor Red
    exit 1
}

$snapshotPath = Join-Path $TargetPath ".audio-organizer\structure-originale.json"
if (-not (Test-Path $snapshotPath)) {
    Write-Host "‚ùå Erreur: Snapshot original introuvable: $snapshotPath" -ForegroundColor Red
    Write-Host "üí° Le syst√®me doit avoir cr√©√© ce fichier lors du dernier scan." -ForegroundColor Yellow
    exit 1
}

# V√©rifier que Node.js est disponible
try {
    $nodeVersion = node --version
    Write-Host "‚úÖ Node.js d√©tect√©: $nodeVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erreur: Node.js non trouv√©. Veuillez l'installer." -ForegroundColor Red
    exit 1
}

# Confirmation utilisateur
Write-Host "üî• CONFIRMATION REQUISE:" -ForegroundColor Yellow
Write-Host "√ätes-vous S√õR de vouloir restaurer la structure originale ?" -ForegroundColor Yellow
Write-Host "Cela va SUPPRIMER toute l'organisation effectu√©e !" -ForegroundColor Yellow
Write-Host ""
$confirmation = Read-Host "Tapez 'OUI' en majuscules pour confirmer"

if ($confirmation -ne "OUI") {
    Write-Host "‚ùå Rollback annul√© par l'utilisateur." -ForegroundColor Yellow
    exit 0
}

Write-Host ""
Write-Host "üöÄ Lancement du rollback..." -ForegroundColor Yellow

# R√©cup√©rer le chemin du script Node.js
$scriptDir = Split-Path -Parent $MyInvocation.MyCommand.Path
$nodeScript = Join-Path $scriptDir "emergency-rollback.js"

if (-not (Test-Path $nodeScript)) {
    Write-Host "‚ùå Erreur: Script Node.js introuvable: $nodeScript" -ForegroundColor Red
    exit 1
}

# Ex√©cuter le rollback Node.js
try {
    & node $nodeScript $TargetPath
    $exitCode = $LASTEXITCODE

    if ($exitCode -eq 0) {
        Write-Host ""
        Write-Host "‚úÖ ROLLBACK TERMIN√â AVEC SUCC√àS !" -ForegroundColor Green
        Write-Host ""
        Write-Host "üî• ACTIONS REQUISES:" -ForegroundColor Yellow
        Write-Host "1. Les fichiers ont √©t√© recr√©√©s VIDES" -ForegroundColor Yellow
        Write-Host "2. Restaurez le CONTENU depuis votre sauvegarde compl√®te" -ForegroundColor Yellow
        Write-Host "3. V√©rifiez l'int√©grit√© de vos donn√©es" -ForegroundColor Yellow
        Write-Host ""
        Write-Host "üìã Consultez les logs dans: $TargetPath\.audio-organizer\" -ForegroundColor Cyan
    } else {
        Write-Host "‚ùå Le rollback a √©chou√© avec le code d'erreur: $exitCode" -ForegroundColor Red
        exit $exitCode
    }
} catch {
    Write-Host "üí• Erreur lors de l'ex√©cution du rollback: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}

# Attendre avant fermeture
Write-Host ""
Write-Host "Appuyez sur une touche pour fermer..." -ForegroundColor Gray
$null = $Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown")